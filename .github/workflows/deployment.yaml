name: Docker Compose CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CONTAINER_NAME: minecraft-denkettle
  VERSION: latest
  PASSWD: ${{ secrets.RCON_PASSWORD }}
  LOCAL_DNS: 8.8.8.8
  SERVER_HOST_NAME: minecraft-server

jobs:
  validate-compose:
    name: Validate Docker Compose
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose-plugin
        
    - name: Create .env file
      run: |
        echo "CONTAINER_NAME=${{ env.CONTAINER_NAME }}" >> .env
        echo "VERSION=${{ env.VERSION }}" >> .env
        echo "PASSWD=${{ env.PASSWD }}" >> .env
        echo "LOCAL_DNS=${{ env.LOCAL_DNS }}" >> .env
        echo "SERVER_HOST_NAME=${{ env.SERVER_HOST_NAME }}" >> .env
        
    - name: Validate compose.yaml syntax
      run: |
        docker compose config --quiet
        
    - name: Check compose file structure
      run: |
        docker compose config > compose-validated.yaml
        echo "✅ Compose file validation successful"
        
    - name: Create required directories
      run: |
        mkdir -p minecraft/data
        mkdir -p minecraft/backup/data
        
    - name: Pull Docker images
      run: |
        docker compose pull
        
    - name: Validate Docker Compose configuration
      run: |
        echo "🚀 Validating Docker Compose configuration..."
        docker compose config --quiet
        echo "✅ Docker Compose configuration is valid"

        
  deploy:
    name: Deploy with Docker Compose
    runs-on: ubuntu-latest
    needs: validate-compose
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose-plugin
        
    - name: Create .env file
      run: |
        echo "CONTAINER_NAME=${{ env.CONTAINER_NAME }}" >> .env
        echo "VERSION=${{ env.VERSION }}" >> .env
        echo "PASSWD=${{ env.PASSWD }}" >> .env
        echo "LOCAL_DNS=${{ env.LOCAL_DNS }}" >> .env
        echo "SERVER_HOST_NAME=${{ env.SERVER_HOST_NAME }}" >> .env
        
    - name: Create required directories
      run: |
        mkdir -p minecraft/data
        mkdir -p minecraft/backup/data
        
    - name: Start services with Docker Compose
      run: |
        echo "🚀 Starting Minecraft server with Docker Compose..."
        docker compose up -d
        
    - name: Wait for services to be ready
      run: |
        echo "⏳ Waiting for services to start..."
        sleep 60
        
    - name: Check service status
      run: |
        echo "📊 Service status:"
        docker compose ps
        docker compose logs --tail=50
        
    - name: Health check
      run: |
        echo "🔍 Running health checks..."
        if docker compose ps | grep -q "Up"; then
          echo "✅ Services are running successfully"
        else
          echo "❌ Some services failed to start"
          docker compose logs
          exit 1
        fi
        
    - name: Cleanup on failure
      if: failure()
      run: |
        echo "🧹 Cleaning up on failure..."
        docker compose down -v
        docker system prune -f